<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AvailableCharacters" xml:space="preserve">
    <value>Доступные герои</value>
  </data>
  <data name="CancelRegistration" xml:space="preserve">
    <value>Отменить регистрацию</value>
  </data>
  <data name="GameCancelled" xml:space="preserve">
    <value>Игра отменена</value>
  </data>
  <data name="GameDoesNotExist" xml:space="preserve">
    <value>Этой игры больше не существует</value>
  </data>
  <data name="GameHasAlreadyStarted" xml:space="preserve">
    <value>Игра уже начата</value>
  </data>
  <data name="GameInvitaion" xml:space="preserve">
    <value>Давай поиграем в Цитадели</value>
  </data>
  <data name="GameLinkText" xml:space="preserve">
    <value>Нажми, чтобы присоединиться к игре</value>
  </data>
  <data name="Rules" xml:space="preserve">
    <value>Правила</value>
  </data>
  <data name="RulesLink" xml:space="preserve">
    <value>https://www.mosigra.ru/download/%D0%9F%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0/citadels_classic_rules.pdf</value>
  </data>
  <data name="Speaking" xml:space="preserve">
    <value>говорит</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Начать</value>
  </data>
  <data name="StartNewGame" xml:space="preserve">
    <value>Начать новую игру</value>
  </data>
  <data name="UnavailableCharacters" xml:space="preserve">
    <value>Сброшенные герои</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Добро пожаловать в игру</value>
  </data>
  <data name="CharacterName1" xml:space="preserve">
    <value>Ассасин</value>
  </data>
  <data name="CharacterDescription1" xml:space="preserve">
    <value>Можете назвать персонажа, которого хотите убить. Когда его вызывают, его владелец молчит. Ход убитого персонажа пропускается</value>
  </data>
  <data name="CharacterName2" xml:space="preserve">
    <value>Вор</value>
  </data>
  <data name="CharacterDescription2" xml:space="preserve">
    <value>Можете назвать персонажа, которого хотите обворовать. Когда этого персонажа вызывают, заберите у его владельца всё золото</value>
  </data>
  <data name="CharacterName3" xml:space="preserve">
    <value>Чародей</value>
  </data>
  <data name="CharacterDescription3" xml:space="preserve">
    <value>Можете либо обменять все карты с руки на карты с руки другого игрока, либо вернуть сколько угодно карт с руки под колоду кварталов и взять из неё столько же новых</value>
  </data>
  <data name="CharacterName4" xml:space="preserve">
    <value>Король</value>
  </data>
  <data name="CharacterDescription4" xml:space="preserve">
    <value>Когда вызывают короля, можете тут же взять корону. Получите 1 золотой за каждый ваш дворянский квартал</value>
  </data>
  <data name="CharacterName5" xml:space="preserve">
    <value>Епископ</value>
  </data>
  <data name="CharacterDescription5" xml:space="preserve">
    <value>Кондотьер не может разрушить ваши кварталы. Получите 1 золотой за каждый ваш церковный квартал</value>
  </data>
  <data name="CharacterName6" xml:space="preserve">
    <value>Купец</value>
  </data>
  <data name="CharacterDescription6" xml:space="preserve">
    <value>Получите 1 дополнительный золотой. Получите 1 золотой за каждый ваш торговый квартал</value>
  </data>
  <data name="CharacterName7" xml:space="preserve">
    <value>Зодчий</value>
  </data>
  <data name="CharacterDescription7" xml:space="preserve">
    <value>Возьмите 2 дополнительные карты кварталов из колоды. Можете построить 3 квартала или меньше</value>
  </data>
  <data name="CharacterName8" xml:space="preserve">
    <value>Кондотьер</value>
  </data>
  <data name="CharacterDescription8" xml:space="preserve">
    <value>Можете разрушить 1 квартал по вашему выбору, заплатив в банк на 1 золотой меньше стоимости квартала. Получите 1 золотой за каждый ваш воинский квартал</value>
  </data>
  <data name="DraftEnded" xml:space="preserve">
    <value>Драфт окончин</value>
  </data>
  <data name="DraftStarted" xml:space="preserve">
    <value>Начинаем драфт</value>
  </data>
  <data name="OnlyHostCanStart" xml:space="preserve">
    <value>Начать игру может только организатор</value>
  </data>
  <data name="ChoosingCharacter" xml:space="preserve">
    <value>{0} выбирает героя</value>
  </data>
  <data name="GatherCoins" xml:space="preserve">
    <value>Взять 2 монеты</value>
  </data>
  <data name="GatherDistrict" xml:space="preserve">
    <value>Взять квартал</value>
  </data>
  <data name="CancelGame" xml:space="preserve">
    <value>Отменить игру</value>
  </data>
</root>